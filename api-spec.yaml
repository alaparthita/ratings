openapi: 3.1.0
info:
  title: Ratings API
  description: |
    API for managing and retrieving movie ratings, providing both batch and individual rating lookups.
    This service allows you to:
    - Fetch average ratings for multiple movies in a single request
    - Get detailed rating information for a specific movie
    - View the total number of ratings submitted for each movie
  version: 1.0.0
servers:
- url: http://localhost:8081
  description: Local development server
paths:
  /api/v1/ratings/movies:
    post:
      tags:
      - Ratings
      summary: Get ratings for multiple movies
      description: |
        Fetch average ratings for a list of movie IDs in a single request.
        Returns a list of RatingSummary objects containing:
        - Movie ID
        - Average rating (on a scale of 0 to 10)
        - Total number of ratings submitted
        The order of ratings in the response matches the order of movie IDs in the request.
        Movies without ratings will be included in the response with a null rating value.
      operationId: getMovieRatings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: List of movie IDs to fetch ratings for
              items:
                type: integer
                format: int32
                minimum: 1
              example: [1, 2, 3]
      responses:
        "200":
          description: Successfully retrieved ratings for all requested movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RatingSummary"
              example:
                - movieId: 1
                  averageRating: 8.9
                  numberOfRatings: 2500
                - movieId: 2
                  averageRating: 7.5
                  numberOfRatings: 1800
                - movieId: 3
                  averageRating: null
                  numberOfRatings: 0
        "400":
          description: Invalid request - empty list, non-integer IDs, or negative IDs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              examples:
                emptyList:
                  value:
                    statusCode: 400
                    message: "Movie IDs list cannot be null or empty"
                    details: "uri=/api/v1/ratings/movies"
                invalidFormat:
                  value:
                    statusCode: 400
                    message: "Invalid movie ID format. All IDs must be integers."
                    details: "uri=/api/v1/ratings/movies"
                negativeId:
                  value:
                    statusCode: 400
                    message: "Movie ID cannot be negative"
                    details: "uri=/api/v1/ratings/movies"
        "500":
          description: Internal server error while processing the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 500
                message: "Error occurred while retrieving movie ratings"
                details: "Database connection error"
  /api/v1/ratings/movie/{movieId}:
    get:
      tags:
      - Ratings
      summary: Get rating for a single movie
      description: |
        Fetch the average rating for a specific movie by its ID.
        Returns a RatingSummary object containing:
        - Movie ID
        - Average rating (on a scale of 0 to 10)
        - Total number of ratings submitted
        Returns 404 if no ratings are found for the specified movie.
      operationId: getMovieRating
      parameters:
      - name: movieId
        in: path
        description: ID of the movie to fetch rating for (must be a positive integer)
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
        example: 1
      responses:
        "200":
          description: Successfully retrieved movie rating
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingSummary"
              example:
                movieId: 1
                averageRating: 8.9
                numberOfRatings: 2500
        "400":
          description: Invalid movie ID format or value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              examples:
                missingId:
                  value:
                    statusCode: 400
                    message: "Movie ID is required"
                    details: "uri=/api/v1/ratings/movie/"
                negativeId:
                  value:
                    statusCode: 400
                    message: "Movie ID cannot be negative"
                    details: "uri=/api/v1/ratings/movie/-1"
                invalidFormat:
                  value:
                    statusCode: 400
                    message: "Failed to convert value 'abc' to required type 'Integer'"
                    details: "uri=/api/v1/ratings/movie/abc"
        "404":
          description: No rating found for the specified movie ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 404
                message: "Movie rating not found for ID: 999"
                details: "Movie ID: 999"
        "500":
          description: Internal server error while retrieving the rating
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 500
                message: "Error occurred while retrieving movie rating"
                details: "Movie ID: 1"
components:
  schemas:
    RatingSummary:
      type: object
      description: Summary of a movie's rating information
      properties:
        movieId:
          type: integer
          format: int32
          description: The unique identifier of the movie
          minimum: 1
        averageRating:
          type: number
          format: double
          description: The average rating for the movie (0-10 scale)
          nullable: true
          minimum: 0
          maximum: 10
        numberOfRatings:
          type: integer
          format: int32
          description: Total number of ratings submitted for the movie
          minimum: 0
      required:
        - movieId
        - numberOfRatings
    ErrorDetails:
      type: object
      description: Standard error response format for all API errors
      properties:
        statusCode:
          type: integer
          format: int32
          description: HTTP status code of the error
        message:
          type: string
          description: Human-readable error message
        details:
          type: string
          description: Additional error details or context
      required:
        - statusCode
        - message
        - details
